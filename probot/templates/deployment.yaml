apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "probot.fullname" . }}
  labels:
{{ include "probot.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "probot.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "probot.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
      - name: git-clone-repository
        image: "{{ template "git.image" . }}"
        imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
        command: [ '/bin/sh', '-c' , 'git clone {{ .Values.repository }} /app && cd /app && git checkout {{ .Values.revision }}']
        volumeMounts:
        - name: app
          mountPath: /app
      - name: npm-install
        image: "{{ template "node.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        workingDir: /app
        command: ['/bin/sh', '-c', 'npm install']
        env:
        - name: HOME
          value: /tmp
        volumeMounts:
        - name: app
          mountPath: /app
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ template "node.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /app
          command: ['/bin/sh', '-c', 'npm start']
          ports:
            - name: http
              containerPort: {{ .Values.applicationPort }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 5
          volumeMounts:
            - name: app
              mountPath: /app
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: app
      emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
